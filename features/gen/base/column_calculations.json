{
	"format_version": "1.13.0",
	"minecraft:scatter_feature": {
		"description": {
			"identifier": "flakey:gen/base/column_calculations"
		},
		"places_feature": "flakey:gen/base/column_aggregate",
		"iterations": "    t.population_noise64 = q.noise(v.originz/64, v.originx/64);    t.population_noise128 = q.noise(v.originz/128, v.originx/128);    t.population_noise256 = q.noise(v.originz/256, v.originx/256);    t.population_noise512 = q.noise(v.originz/512, v.originx/512);    t.population_noise1024 = q.noise(v.originz/1024, v.originx/1024);    t.population_noise2048 = q.noise(v.originz/2048, v.originx/2048);    t.population_noise4096 = q.noise(v.originz/4096, v.originx/4096);    t.population_weight64 = 0.0075;    t.population_weight128 = 0.0125;    t.population_weight256 = 0.025;    t.population_weight512 = 0.05;    t.population_weight1024 = 0.10;     t.population_weight2048 = 0.20;    t.population_weight4096 = 0.40;        t.population_weighted = ((t.population_weight64 * t.population_noise64) + (t.population_weight128 * t.population_noise128) + (t.population_weight256 * t.population_noise256) + (t.population_weight512 * t.population_noise512) + (t.population_weight1024 * t.population_noise1024) + (t.population_weight2048 * t.population_noise2048) + (t.population_weight4096 * t.population_noise4096)) / (t.population_weight64 + t.population_weight128 + t.population_weight256 + t.population_weight512 + t.population_weight1024 + t.population_weight2048 + t.population_weight4096);        t.pop_spline0_num = 0;    t.pop_spline1_num = 0.1;    t.pop_spline2_num = 0.2;    t.pop_spline3_num = 0.45;    t.pop_spline4_num = 0.7;    t.pop_spline5_num = 1;            t.weird_noise32 = q.noise((v.originz + 2048)/32, (v.originx + 2048)/32);    t.weird_noise64 = q.noise((v.originz + 2048)/64, (v.originx + 2048)/64);    t.weird_noise128 = q.noise((v.originz + 2048)/128, (v.originx + 2048)/128);    t.weird_noise256 = q.noise((v.originz + 2048)/256, (v.originx + 2048)/256);    t.weird_noise512 = q.noise((v.originz + 2048)/512, (v.originx + 2048)/512);    t.weird_noise1024 = q.noise((v.originz + 2048)/1024, (v.originx + 2048)/1024);    t.weird_noise2048 = q.noise((v.originz + 2048)/2048, (v.originx + 2048)/2048);    t.weird_noise4096 = q.noise((v.originz + 2048)/4096, (v.originx + 2048)/4096);    t.weird_weight32 = 0.0005;    t.weird_weight64 = 0.001;    t.weird_weight128 = 0.002;    t.weird_weight256 = 0.004;    t.weird_weight512 = 0.008;    t.weird_weight1024 = 0.016;    t.weird_weight2048 = 0.032;    t.weird_weight4096 = 0.128;    t.weird_weighted = ((t.weird_weight32 * t.weird_noise32) + (t.weird_weight64 * t.weird_noise64) + (t.weird_weight128 * t.weird_noise128) + (t.weird_weight256 * t.weird_noise256) + (t.weird_weight512 * t.weird_noise512) + (t.weird_weight1024 * t.weird_noise1024) + (t.weird_weight2048 * t.weird_noise2048) + (t.weird_weight4096 * t.weird_noise4096)) / (t.weird_weight32 + t.weird_weight64 + t.weird_weight128 + t.weird_weight256 + t.weird_weight512 + t.weird_weight1024 + t.weird_weight2048 + t.weird_weight4096);        t.weird_spline0_num = 0;    t.weird_spline1_num = 0.025;    t.weird_spline2_num = 0.2;    t.weird_spline3_num = 0.5;    t.weird_spline4_num = 1;            t.weird_weighted = math.abs(t.weird_weighted);    t.population_weighted = math.abs(t.population_weighted);    (t.population_weighted >= t.pop_spline0_num && t.population_weighted <= t.pop_spline1_num) ? {                t.population_percent =             math.hermite_blend(                (t.population_weighted - t.pop_spline0_num)                / (t.pop_spline1_num - t.pop_spline0_num)            );                (t.weird_weighted >= t.weird_spline0_num && t.weird_weighted < t.weird_spline1_num) ? {                        t.biome = 'overgrown river';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline0_num)                    / (t.weird_spline1_num - t.weird_spline0_num)                );        };        (t.weird_weighted >= t.weird_spline1_num && t.weird_weighted < t.weird_spline2_num) ? {                        t.biome = 'forested shrubby plains';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline1_num)                    / (t.weird_spline2_num - t.weird_spline1_num)                );        };        (t.weird_weighted >= t.weird_spline2_num && t.weird_weighted < t.weird_spline3_num) ? {                        t.biome = 'thick rolling forest';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline2_num)                    / (t.weird_spline3_num - t.weird_spline2_num)                );        };        (t.weird_weighted >= t.weird_spline3_num && t.weird_weighted <= t.weird_spline4_num) ? {                        t.biome = 'wild mountains';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline3_num)                    / (t.weird_spline4_num - t.weird_spline3_num)                );        };    };    (t.population_weighted > t.pop_spline1_num && t.population_weighted <= t.pop_spline2_num) ? {                t.population_percent =             math.hermite_blend(                (t.population_weighted - t.pop_spline1_num)                / (t.pop_spline2_num - t.pop_spline1_num)            );        (t.weird_weighted >= t.weird_spline0_num && t.weird_weighted < t.weird_spline1_num) ? {                        t.biome = 'slightly overgrown river';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline0_num)                    / (t.weird_spline1_num - t.weird_spline0_num)                );        };        (t.weird_weighted >= t.weird_spline1_num && t.weird_weighted < t.weird_spline2_num) ? {                        t.biome = 'shrubby plains';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline1_num)                    / (t.weird_spline2_num - t.weird_spline1_num)                );        };        (t.weird_weighted >= t.weird_spline2_num && t.weird_weighted < t.weird_spline3_num) ? {                        t.biome = 'rolling forest';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline2_num)                    / (t.weird_spline3_num - t.weird_spline2_num)                );        };        (t.weird_weighted >= t.weird_spline3_num && t.weird_weighted <= t.weird_spline4_num) ? {                        t.biome = 'mountains';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline3_num)                    / (t.weird_spline4_num - t.weird_spline3_num)                );        };    };    (t.population_weighted > t.pop_spline2_num && t.population_weighted <= t.pop_spline3_num) ? {                t.population_percent =             math.hermite_blend(                (t.population_weighted - t.pop_spline2_num)                / (t.pop_spline3_num - t.pop_spline2_num)            );        (t.weird_weighted >= t.weird_spline0_num && t.weird_weighted < t.weird_spline1_num) ? {                        t.biome = 'river';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline0_num)                    / (t.weird_spline1_num - t.weird_spline0_num)                );        };        (t.weird_weighted >= t.weird_spline1_num && t.weird_weighted < t.weird_spline2_num) ? {                        t.biome = 'plains';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline1_num)                    / (t.weird_spline2_num - t.weird_spline1_num)                );        };        (t.weird_weighted >= t.weird_spline2_num && t.weird_weighted < t.weird_spline3_num) ? {                        t.biome = 'rolling plains';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline2_num)                    / (t.weird_spline3_num - t.weird_spline2_num)                );        };        (t.weird_weighted >= t.weird_spline3_num && t.weird_weighted <= t.weird_spline4_num) ? {                        t.biome = 'rolling hills';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline3_num)                    / (t.weird_spline4_num - t.weird_spline3_num)                );        };    };    (t.population_weighted > t.pop_spline3_num && t.population_weighted <= t.pop_spline4_num) ? {                t.population_percent =             math.hermite_blend(                (t.population_weighted - t.pop_spline3_num)                / (t.pop_spline4_num - t.pop_spline3_num)            );        (t.weird_weighted >= t.weird_spline0_num && t.weird_weighted < t.weird_spline1_num) ? {                        t.biome = 'suburb river';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline0_num)                    / (t.weird_spline1_num - t.weird_spline0_num)                );        };        (t.weird_weighted >= t.weird_spline1_num && t.weird_weighted < t.weird_spline2_num) ? {                        t.biome = 'flat suburbs';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline1_num)                    / (t.weird_spline2_num - t.weird_spline1_num)                );        };        (t.weird_weighted >= t.weird_spline2_num && t.weird_weighted < t.weird_spline3_num) ? {                        t.biome = 'smooth suburbs';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline2_num)                    / (t.weird_spline3_num - t.weird_spline2_num)                );        };        (t.weird_weighted >= t.weird_spline3_num && t.weird_weighted <= t.weird_spline4_num) ? {                        t.biome = 'rolling suburbs';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline3_num)                    / (t.weird_spline4_num - t.weird_spline3_num)                );        };    };    (t.population_weighted > t.pop_spline4_num && t.population_weighted <= t.pop_spline5_num) ? {                t.population_percent =             math.hermite_blend(                (t.population_weighted - t.pop_spline4_num)                / (t.pop_spline5_num - t.pop_spline4_num)            );        (t.weird_weighted >= t.weird_spline0_num && t.weird_weighted < t.weird_spline1_num) ? {                        t.biome = 'city river';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline0_num)                    / (t.weird_spline1_num - t.weird_spline0_num)                );        };        (t.weird_weighted >= t.weird_spline1_num && t.weird_weighted < t.weird_spline2_num) ? {                        t.biome = 'tall flat city';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline1_num)                    / (t.weird_spline2_num - t.weird_spline1_num)                );        };        (t.weird_weighted >= t.weird_spline2_num && t.weird_weighted < t.weird_spline3_num) ? {                        t.biome = 'tall city';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline2_num)                    / (t.weird_spline3_num - t.weird_spline2_num)                );        };        (t.weird_weighted >= t.weird_spline3_num && t.weird_weighted <= t.weird_spline4_num) ? {                        t.biome = 'city park';            t.weird_percent =                 math.hermite_blend(                    (t.weird_weighted - t.weird_spline3_num)                    / (t.weird_spline4_num - t.weird_spline3_num)                );        };    };t.wild_mountains_low_height_spline = 150; t.wild_mountains_low_spline = 1.00;t.wild_mountains_high_height_spline = 180; t.wild_mountains_high_spline = -0.10;t.wild_mountains_max_height = 210;  t.thick_rolling_forest_low_height_spline = 110; t.thick_rolling_forest_low_spline = 1.00;t.thick_rolling_forest_high_height_spline = 130; t.thick_rolling_forest_high_spline = -0.35;t.thick_rolling_forest_max_height = 150;  t.forested_shrubby_plains_low_height_spline = 60; t.forested_shrubby_plains_low_spline = 1.00;t.forested_shrubby_plains_high_height_spline = 78; t.forested_shrubby_plains_high_spline = -0.40;t.forested_shrubby_plains_max_height = 90;  t.overgrown_river_low_height_spline = 30; t.overgrown_river_low_spline = 1.00;t.overgrown_river_high_height_spline = 43; t.overgrown_river_high_spline = -0.90;t.overgrown_river_max_height = 47;  t.mountains_low_height_spline = 125; t.mountains_low_spline = 1.00;t.mountains_high_height_spline = 155; t.mountains_high_spline = -0.20;t.mountains_max_height = 180;  t.rolling_forest_low_height_spline = 95; t.rolling_forest_low_spline = 1.00;t.rolling_forest_high_height_spline = 110; t.rolling_forest_high_spline = -0.40;t.rolling_forest_max_height = 125;  t.shrubby_plains_low_height_spline = 60; t.shrubby_plains_low_spline = 1.00;t.shrubby_plains_high_height_spline = 70; t.shrubby_plains_high_spline = -0.40;t.shrubby_plains_max_height = 80;  t.slightly_overgrown_river_low_height_spline = 30; t.slightly_overgrown_river_low_spline = 1.00;t.slightly_overgrown_river_high_height_spline = 40; t.slightly_overgrown_river_high_spline = -0.90;t.slightly_overgrown_river_max_height = 45;  t.rolling_hills_low_height_spline = 80; t.rolling_hills_low_spline = 1.00;t.rolling_hills_high_height_spline = 105; t.rolling_hills_high_spline = -0.30;t.rolling_hills_max_height = 125;  t.rolling_plains_low_height_spline = 60; t.rolling_plains_low_spline = 1.00;t.rolling_plains_high_height_spline = 72; t.rolling_plains_high_spline = -0.70;t.rolling_plains_max_height = 78;  t.plains_low_height_spline = 60; t.plains_low_spline = 1.00;t.plains_high_height_spline = 65; t.plains_high_spline = -0.70;t.plains_max_height = 70;  t.river_low_height_spline = 30; t.river_low_spline = 1.00;t.river_high_height_spline = 42; t.river_high_spline = -0.90;t.river_max_height = 44;  t.rolling_suburbs_low_height_spline = 64; t.rolling_suburbs_low_spline = 1.00;t.rolling_suburbs_high_height_spline = 76; t.rolling_suburbs_high_spline = -0.90;t.rolling_suburbs_max_height = 82;  t.smooth_suburbs_low_height_spline = 60; t.smooth_suburbs_low_spline = 1.00;t.smooth_suburbs_high_height_spline = 70; t.smooth_suburbs_high_spline = -0.90;t.smooth_suburbs_max_height = 74;  t.flat_suburbs_low_height_spline = 56; t.flat_suburbs_low_spline = 1.00;t.flat_suburbs_high_height_spline = 66; t.flat_suburbs_high_spline = -0.90;t.flat_suburbs_max_height = 70;  t.suburb_river_low_height_spline = 30; t.suburb_river_low_spline = 1.00;t.suburb_river_high_height_spline = 42; t.suburb_river_high_spline = -0.90;t.suburb_river_max_height = 44;  t.city_park_low_height_spline = 70; t.city_park_low_spline = 1.00;t.city_park_high_height_spline = 78; t.city_park_high_spline = -0.40;t.city_park_max_height = 86;  t.tall_city_low_height_spline = 60; t.tall_city_low_spline = 1.00;t.tall_city_high_height_spline = 66; t.tall_city_high_spline = -0.90;t.tall_city_max_height = 70;  t.tall_flat_city_low_height_spline = 54; t.tall_flat_city_low_spline = 1.00;t.tall_flat_city_high_height_spline = 58; t.tall_flat_city_high_spline = -0.90;t.tall_flat_city_max_height = 60;  t.city_river_low_height_spline = 32; t.city_river_low_spline = 1.00;t.city_river_high_height_spline = 38; t.city_river_high_spline = -0.90;t.city_river_max_height = 42;  t.weird_percent = (1 - t.weird_percent);t.population_percent = (1 - t.population_percent);    (t.biome == 'overgrown river') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.overgrown_river_low_height_spline) + (t.right_p * t.slightly_overgrown_river_low_height_spline) +             (t.down_p * t.forested_shrubby_plains_low_height_spline) + (t.downright_p * t.shrubby_plains_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.overgrown_river_low_spline) + (t.right_p * t.slightly_overgrown_river_low_spline) +             (t.down_p * t.forested_shrubby_plains_low_spline) + (t.downright_p * t.shrubby_plains_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.overgrown_river_high_height_spline) + (t.right_p * t.slightly_overgrown_river_high_height_spline) +             (t.down_p * t.forested_shrubby_plains_high_height_spline) + (t.downright_p * t.shrubby_plains_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.overgrown_river_high_spline) + (t.right_p * t.slightly_overgrown_river_high_spline) +             (t.down_p * t.forested_shrubby_plains_high_spline) + (t.downright_p * t.shrubby_plains_high_spline);        t.column_max_height_output =             (t.this_p * t.overgrown_river_max_height) + (t.right_p * t.slightly_overgrown_river_max_height) +             (t.down_p * t.forested_shrubby_plains_max_height) + (t.downright_p * t.shrubby_plains_max_height);    };    (t.biome == 'forested shrubby plains') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.forested_shrubby_plains_low_height_spline) + (t.right_p * t.shrubby_plains_low_height_spline) +             (t.down_p * t.thick_rolling_forest_low_height_spline) + (t.downright_p * t.rolling_forest_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.forested_shrubby_plains_low_spline) + (t.right_p * t.shrubby_plains_low_spline) +             (t.down_p * t.thick_rolling_forest_low_spline) + (t.downright_p * t.rolling_forest_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.forested_shrubby_plains_high_height_spline) + (t.right_p * t.shrubby_plains_high_height_spline) +             (t.down_p * t.thick_rolling_forest_high_height_spline) + (t.downright_p * t.rolling_forest_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.forested_shrubby_plains_high_spline) + (t.right_p * t.shrubby_plains_high_spline) +             (t.down_p * t.thick_rolling_forest_high_spline) + (t.downright_p * t.rolling_forest_high_spline);        t.column_max_height_output =             (t.this_p * t.forested_shrubby_plains_max_height) + (t.right_p * t.shrubby_plains_max_height) +             (t.down_p * t.thick_rolling_forest_max_height) + (t.downright_p * t.rolling_forest_max_height);    };    (t.biome == 'thick rolling forest') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.thick_rolling_forest_low_height_spline) + (t.right_p * t.rolling_forest_low_height_spline) +             (t.down_p * t.wild_mountains_low_height_spline) + (t.downright_p * t.mountains_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.thick_rolling_forest_low_spline) + (t.right_p * t.rolling_forest_low_spline) +             (t.down_p * t.wild_mountains_low_spline) + (t.downright_p * t.mountains_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.thick_rolling_forest_high_height_spline) + (t.right_p * t.rolling_forest_high_height_spline) +             (t.down_p * t.wild_mountains_high_height_spline) + (t.downright_p * t.mountains_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.thick_rolling_forest_high_spline) + (t.right_p * t.rolling_forest_high_spline) +             (t.down_p * t.wild_mountains_high_spline) + (t.downright_p * t.mountains_high_spline);        t.column_max_height_output =             (t.this_p * t.thick_rolling_forest_max_height) + (t.right_p * t.rolling_forest_max_height) +             (t.down_p * t.wild_mountains_max_height) + (t.downright_p * t.mountains_max_height);    };    (t.biome == 'wild mountains') ? {        t.this_p = t.population_percent;        t.right_p = (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.wild_mountains_low_height_spline) + (t.right_p * t.mountains_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.wild_mountains_low_spline) + (t.right_p * t.mountains_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.wild_mountains_high_height_spline) + (t.right_p * t.mountains_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.wild_mountains_high_spline) + (t.right_p * t.mountains_high_spline);        t.column_max_height_output =             (t.this_p * t.wild_mountains_max_height) + (t.right_p * t.mountains_max_height);    };    (t.biome == 'slightly overgrown river') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.slightly_overgrown_river_low_height_spline) + (t.right_p * t.river_low_height_spline) +             (t.down_p * t.shrubby_plains_low_height_spline) + (t.downright_p * t.plains_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.slightly_overgrown_river_low_spline) + (t.right_p * t.river_low_spline) +             (t.down_p * t.shrubby_plains_low_spline) + (t.downright_p * t.plains_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.slightly_overgrown_river_high_height_spline) + (t.right_p * t.river_high_height_spline) +             (t.down_p * t.shrubby_plains_high_height_spline) + (t.downright_p * t.plains_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.slightly_overgrown_river_high_spline) + (t.right_p * t.river_high_spline) +             (t.down_p * t.shrubby_plains_high_spline) + (t.downright_p * t.plains_high_spline);        t.column_max_height_output =             (t.this_p * t.slightly_overgrown_river_max_height) + (t.right_p * t.river_max_height) +             (t.down_p * t.shrubby_plains_max_height) + (t.downright_p * t.plains_max_height);    };    (t.biome == 'shrubby plains') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.shrubby_plains_low_height_spline) + (t.right_p * t.plains_low_height_spline) +             (t.down_p * t.rolling_forest_low_height_spline) + (t.downright_p * t.rolling_plains_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.shrubby_plains_low_spline) + (t.right_p * t.plains_low_spline) +             (t.down_p * t.rolling_forest_low_spline) + (t.downright_p * t.rolling_plains_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.shrubby_plains_high_height_spline) + (t.right_p * t.plains_high_height_spline) +             (t.down_p * t.rolling_forest_high_height_spline) + (t.downright_p * t.rolling_plains_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.shrubby_plains_high_spline) + (t.right_p * t.plains_high_spline) +             (t.down_p * t.rolling_forest_high_spline) + (t.downright_p * t.rolling_plains_high_spline);        t.column_max_height_output =             (t.this_p * t.shrubby_plains_max_height) + (t.right_p * t.plains_max_height) +             (t.down_p * t.rolling_forest_max_height) + (t.downright_p * t.rolling_plains_max_height);    };    (t.biome == 'rolling forest') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.rolling_forest_low_height_spline) + (t.right_p * t.rolling_plains_low_height_spline) +             (t.down_p * t.mountains_low_height_spline) + (t.downright_p * t.rolling_hills_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.rolling_forest_low_spline) + (t.right_p * t.rolling_plains_low_spline) +             (t.down_p * t.mountains_low_spline) + (t.downright_p * t.rolling_hills_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.rolling_forest_high_height_spline) + (t.right_p * t.rolling_plains_high_height_spline) +             (t.down_p * t.mountains_high_height_spline) + (t.downright_p * t.rolling_hills_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.rolling_forest_high_spline) + (t.right_p * t.rolling_plains_high_spline) +             (t.down_p * t.mountains_high_spline) + (t.downright_p * t.rolling_hills_high_spline);        t.column_max_height_output =             (t.this_p * t.rolling_forest_max_height) + (t.right_p * t.rolling_plains_max_height) +             (t.down_p * t.mountains_max_height) + (t.downright_p * t.rolling_hills_max_height);    };    (t.biome == 'mountains') ? {        t.this_p = t.population_percent;        t.right_p = (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.mountains_low_height_spline) + (t.right_p * t.rolling_hills_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.mountains_low_spline) + (t.right_p * t.rolling_hills_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.mountains_high_height_spline) + (t.right_p * t.rolling_hills_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.mountains_high_spline) + (t.right_p * t.rolling_hills_high_spline);        t.column_max_height_output =             (t.this_p * t.mountains_max_height) + (t.right_p * t.rolling_hills_max_height);    };    (t.biome == 'river') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.river_low_height_spline) + (t.right_p * t.suburb_river_low_height_spline) +             (t.down_p * t.plains_low_height_spline) + (t.downright_p * t.flat_suburbs_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.river_low_spline) + (t.right_p * t.suburb_river_low_spline) +             (t.down_p * t.plains_low_spline) + (t.downright_p * t.flat_suburbs_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.river_high_height_spline) + (t.right_p * t.suburb_river_high_height_spline) +             (t.down_p * t.plains_high_height_spline) + (t.downright_p * t.flat_suburbs_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.river_high_spline) + (t.right_p * t.suburb_river_high_spline) +             (t.down_p * t.plains_high_spline) + (t.downright_p * t.flat_suburbs_high_spline);        t.column_max_height_output =             (t.this_p * t.river_max_height) + (t.right_p * t.suburb_river_max_height) +             (t.down_p * t.plains_max_height) + (t.downright_p * t.flat_suburbs_max_height);    };    (t.biome == 'plains') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.plains_low_height_spline) + (t.right_p * t.flat_suburbs_low_height_spline) +             (t.down_p * t.rolling_plains_low_height_spline) + (t.downright_p * t.smooth_suburbs_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.plains_low_spline) + (t.right_p * t.flat_suburbs_low_spline) +             (t.down_p * t.rolling_plains_low_spline) + (t.downright_p * t.smooth_suburbs_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.plains_high_height_spline) + (t.right_p * t.flat_suburbs_high_height_spline) +             (t.down_p * t.rolling_plains_high_height_spline) + (t.downright_p * t.smooth_suburbs_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.plains_high_spline) + (t.right_p * t.flat_suburbs_high_spline) +             (t.down_p * t.rolling_plains_high_spline) + (t.downright_p * t.smooth_suburbs_high_spline);        t.column_max_height_output =             (t.this_p * t.plains_max_height) + (t.right_p * t.flat_suburbs_max_height) +             (t.down_p * t.rolling_plains_max_height) + (t.downright_p * t.smooth_suburbs_max_height);    };    (t.biome == 'rolling plains') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.rolling_plains_low_height_spline) + (t.right_p * t.smooth_suburbs_low_height_spline) +             (t.down_p * t.rolling_hills_low_height_spline) + (t.downright_p * t.rolling_suburbs_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.rolling_plains_low_spline) + (t.right_p * t.smooth_suburbs_low_spline) +             (t.down_p * t.rolling_hills_low_spline) + (t.downright_p * t.rolling_suburbs_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.rolling_plains_high_height_spline) + (t.right_p * t.smooth_suburbs_high_height_spline) +             (t.down_p * t.rolling_hills_high_height_spline) + (t.downright_p * t.rolling_suburbs_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.rolling_plains_high_spline) + (t.right_p * t.smooth_suburbs_high_spline) +             (t.down_p * t.rolling_hills_high_spline) + (t.downright_p * t.rolling_suburbs_high_spline);        t.column_max_height_output =             (t.this_p * t.rolling_plains_max_height) + (t.right_p * t.smooth_suburbs_max_height) +             (t.down_p * t.rolling_hills_max_height) + (t.downright_p * t.rolling_suburbs_max_height);    };    (t.biome == 'rolling hills') ? {        t.this_p = t.population_percent;        t.right_p = (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.rolling_hills_low_height_spline) + (t.right_p * t.rolling_suburbs_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.rolling_hills_low_spline) + (t.right_p * t.rolling_suburbs_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.rolling_hills_high_height_spline) + (t.right_p * t.rolling_suburbs_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.rolling_hills_high_spline) + (t.right_p * t.rolling_suburbs_high_spline);        t.column_max_height_output =             (t.this_p * t.rolling_hills_max_height) + (t.right_p * t.rolling_suburbs_max_height);    };    (t.biome == 'suburb river') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.suburb_river_low_height_spline) + (t.right_p * t.city_river_low_height_spline) +             (t.down_p * t.flat_suburbs_low_height_spline) + (t.downright_p * t.tall_flat_city_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.suburb_river_low_spline) + (t.right_p * t.city_river_low_spline) +             (t.down_p * t.flat_suburbs_low_spline) + (t.downright_p * t.tall_flat_city_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.suburb_river_high_height_spline) + (t.right_p * t.city_river_high_height_spline) +             (t.down_p * t.flat_suburbs_high_height_spline) + (t.downright_p * t.tall_flat_city_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.suburb_river_high_spline) + (t.right_p * t.city_river_high_spline) +             (t.down_p * t.flat_suburbs_high_spline) + (t.downright_p * t.tall_flat_city_high_spline);        t.column_max_height_output =             (t.this_p * t.suburb_river_max_height) + (t.right_p * t.city_river_max_height) +             (t.down_p * t.flat_suburbs_max_height) + (t.downright_p * t.tall_flat_city_max_height);    };    (t.biome == 'flat suburbs') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.flat_suburbs_low_height_spline) + (t.right_p * t.tall_flat_city_low_height_spline) +             (t.down_p * t.smooth_suburbs_low_height_spline) + (t.downright_p * t.tall_city_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.flat_suburbs_low_spline) + (t.right_p * t.tall_flat_city_low_spline) +             (t.down_p * t.smooth_suburbs_low_spline) + (t.downright_p * t.tall_city_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.flat_suburbs_high_height_spline) + (t.right_p * t.tall_flat_city_high_height_spline) +             (t.down_p * t.smooth_suburbs_high_height_spline) + (t.downright_p * t.tall_city_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.flat_suburbs_high_spline) + (t.right_p * t.tall_flat_city_high_spline) +             (t.down_p * t.smooth_suburbs_high_spline) + (t.downright_p * t.tall_city_high_spline);        t.column_max_height_output =             (t.this_p * t.flat_suburbs_max_height) + (t.right_p * t.tall_flat_city_max_height) +             (t.down_p * t.smooth_suburbs_max_height) + (t.downright_p * t.tall_city_max_height);    };    (t.biome == 'smooth suburbs') ? {        t.this_p = t.weird_percent * t.population_percent;        t.down_p = (1 - t.weird_percent) * t.population_percent;        t.right_p = t.weird_percent * (1 - t.population_percent);        t.downright_p = (1 - t.weird_percent) * (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.smooth_suburbs_low_height_spline) + (t.right_p * t.tall_city_low_height_spline) +             (t.down_p * t.rolling_suburbs_low_height_spline) + (t.downright_p * t.city_park_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.smooth_suburbs_low_spline) + (t.right_p * t.tall_city_low_spline) +             (t.down_p * t.rolling_suburbs_low_spline) + (t.downright_p * t.city_park_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.smooth_suburbs_high_height_spline) + (t.right_p * t.tall_city_high_height_spline) +             (t.down_p * t.rolling_suburbs_high_height_spline) + (t.downright_p * t.city_park_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.smooth_suburbs_high_spline) + (t.right_p * t.tall_city_high_spline) +             (t.down_p * t.rolling_suburbs_high_spline) + (t.downright_p * t.city_park_high_spline);        t.column_max_height_output =             (t.this_p * t.smooth_suburbs_max_height) + (t.right_p * t.tall_city_max_height) +             (t.down_p * t.rolling_suburbs_max_height) + (t.downright_p * t.city_park_max_height);    };    (t.biome == 'rolling suburbs') ? {        t.this_p = t.population_percent;        t.right_p = (1 - t.population_percent);                t.column_low_height_spline_output =             (t.this_p * t.rolling_suburbs_low_height_spline) + (t.right_p * t.city_park_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.rolling_suburbs_low_spline) + (t.right_p * t.city_park_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.rolling_suburbs_high_height_spline) + (t.right_p * t.city_park_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.rolling_suburbs_high_spline) + (t.right_p * t.city_park_high_spline);        t.column_max_height_output =             (t.this_p * t.rolling_suburbs_max_height) + (t.right_p * t.city_park_max_height);    };    (t.biome == 'city river') ? {        t.this_p = t.weird_percent;        t.down_p = (1 - t.weird_percent);                t.column_low_height_spline_output =             (t.this_p * t.city_river_low_height_spline) +             (t.down_p * t.tall_flat_city_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.city_river_low_spline) +             (t.down_p * t.tall_flat_city_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.city_river_high_height_spline) +             (t.down_p * t.tall_flat_city_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.city_river_high_spline) +             (t.down_p * t.tall_flat_city_high_spline);        t.column_max_height_output =             (t.this_p * t.city_river_max_height) +             (t.down_p * t.tall_flat_city_max_height);    };    (t.biome == 'tall flat city') ? {        t.this_p = t.weird_percent;        t.down_p = (1 - t.weird_percent);                t.column_low_height_spline_output =             (t.this_p * t.tall_flat_city_low_height_spline) +             (t.down_p * t.tall_city_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.tall_flat_city_low_spline) +             (t.down_p * t.tall_city_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.tall_flat_city_high_height_spline) +             (t.down_p * t.tall_city_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.tall_flat_city_high_spline) +             (t.down_p * t.tall_city_high_spline);        t.column_max_height_output =             (t.this_p * t.tall_flat_city_max_height) +             (t.down_p * t.tall_city_max_height);    };    (t.biome == 'tall city') ? {        t.this_p = t.weird_percent;        t.down_p = (1 - t.weird_percent);                t.column_low_height_spline_output =             (t.this_p * t.tall_city_low_height_spline) +             (t.down_p * t.city_park_low_height_spline);        t.column_low_spline_output =             (t.this_p * t.tall_city_low_spline) +             (t.down_p * t.city_park_low_spline);        t.column_high_height_spline_output =             (t.this_p * t.tall_city_high_height_spline) +             (t.down_p * t.city_park_high_height_spline);        t.column_high_spline_output =             (t.this_p * t.tall_city_high_spline) +             (t.down_p * t.city_park_high_spline);        t.column_max_height_output =             (t.this_p * t.tall_city_max_height) +             (t.down_p * t.city_park_max_height);    };    (t.biome == 'city park') ? {        t.column_low_height_spline_output = t.city_park_low_height_spline;        t.column_low_spline_output = t.city_park_low_spline;        t.column_high_height_spline_output = t.city_park_high_height_spline;        t.column_high_spline_output = t.city_park_high_spline;        t.column_max_height_output = t.city_park_max_height;    };(t.column_max_height_output < 70) ? {    t.column_max_height_output = 70;};return 1;",
		"x": 0,
		"z": 0,
		"y": 0
	}
}